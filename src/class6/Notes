Operators:
    Operators are symbol which perform an operation on data. There are many
    different types of operators in java.
Arithmetic Operators:
    These operators help us perform simple mathematical operations Like
    Addition       => +   int a=10 int b=20 int c=a+b; =>30
    Subtraction    => -
    Multiplication => *
    Division       => /
    Modulus        => %
Shorthand Operators:
    They help us perform Mathematical operations but using a little shorter
    syntax.
    add and update the variable  +=  int a=10 a+=20  => 30
    subtract and update the variable  -=  int a=10 a-=20  => -10
    Multiply and update the variable  *=  int a=10 a*=20  => 200
    Divide and update the variable  /=  int a=10 a/=20  => 0
    Modulus and update the variable  %=  int a=10 a%=20  => 200
Relational Operators
    These operators help us compare things.
    == checks if two objects are equal
    != checks if two objects are Not equal
    > Great than
    < Less than
    >= greater than equal
    <= less than equal
Logical Operators:
    They help us combine multiple boolean conditions.
    ! Not
    || OR
    && AND
Increment/Decrement operators.
    ++ this will help us increase the value of a variable by one
    -- this will help us decrease the value of a variable by one
Note:
While loop checks the condition first then executes the code. Do while on the
other hand executes the code first and then checks the condition. Sometimes
when we write the logic using do while it becomes easier. There are no other
differences and reasons to use a do while instead of while.

Type of loops
while loop:first checks the condition if condition
           is true then control goes inside the loop body
           otherwise goes outside of the body.The while statement
           continues testing the expression and executing its
           block until the expression evaluates to false.

do while loop:hecks for condition after
             executing the statements control flow statement that
             executes a block of code at least once, and then
             repeatedly executes the block, or not, depending
             on a given condition at the end of the block
for loop
enhanced loop